/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/

(function (Backbone, Drupal) {
  Drupal.addToCart.AddToCartModel = Backbone.Model.extend({
    defaults: {
      defaultVariation: '',
      selectedVariation: '',
      attributes: {},
      renderedAttributes: {},
      injectedFields: {},
      variations: {},
      variationCount: 0,
      type: 'commerce_product_variation_attributes'
    },
    initialize: function initialize() {
      this.set('variationCount', Object.keys(this.get('variations')).length);
      this.set('selectedVariation', this.getVariation(this.get('defaultVariation')));
    },
    getDefaultVariation: function getDefaultVariation() {
      return this.get('defaultVariation');
    },
    getAttributes: function getAttributes() {
      return this.get('attributes');
    },
    getVariations: function getVariations() {
      return this.get('variations');
    },
    getVariation: function getVariation(uuid) {
      return this.attributes['variations'][uuid];
    },
    getResolvedVariation: function getResolvedVariation(selectedAttributes) {
      var _this = this;

      return Object.keys(this.getVariations()).map(function (key) {
        return _this.getVariation(key);
      }).filter(function (variation) {
        return _this.getAttributes().every(function (attribute) {
          var fieldName = 'attribute_' + attribute.id;
          return variation.hasOwnProperty(fieldName) && variation[fieldName].toString() === selectedAttributes[fieldName].toString();
        });
      }).shift();
    },
    getSelectedVariation: function getSelectedVariation() {
      return this.attributes['selectedVariation'];
    },
    setSelectedVariation: function setSelectedVariation(uuid) {
      this.set('selectedVariation', this.getVariation(uuid));
    },
    getVariationCount: function getVariationCount() {
      return this.get('variationCount');
    },
    getRenderedAttribute: function getRenderedAttribute(fieldName) {
      return this.attributes['renderedAttributes'][fieldName];
    },
    getInjectedFieldsForVariation: function getInjectedFieldsForVariation(uuid) {
      return this.attributes['injectedFields'][uuid];
    },
    getType: function getType() {
      return this.attributes['type'];
    }
  });
})(Backbone, Drupal);